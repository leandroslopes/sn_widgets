<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($scope, $window, $location) {
    /* widget controller */
    var c = this;

    c.title = 'Incident Report';
    c.incident_label_fields = [];
    c.incidents = [];
    c.attachment_sys_id = '';
    c.issue_date = '';
    c.issue_hour = '';

    get_date_hour_issue();

    c.incident_label_fields = c.data.incident_label_fields;
    c.incidents = organize_incidents(c.data.incidents);

    /*  
     * Set date and time when the report is issued.
     */
    function get_date_hour_issue() {
        c.issue_date = moment().format("DD/MM/YYYY");
        c.issue_hour = moment().format("HH:mm:ss");
    }

    function organize_incidents(incidents) {
        var incidents_organized = incidents;

        incidents_organized.map(function(incident) {
            return {
                number: incident.number,
                opened_at: incident.opened_at,
                short_description: incident.short_description,
                caller_name: incident.caller_name,
                priority: incident.priority,
                state: incident.state,
                category: incident.category,
                assignment_group: incident.assignment_group,
                assigned_to_name: incident.assigned_to_name,
                sys_updated_on: incident.sys_updated_on
            }
        });

        return incidents_organized;
    }

    /* 
     * Generate PDF report.
     */
    c.generate_pdf = function() {
        var attachment_url = '';
        var error_message = '';

        var obj = {
            action: 'generate_pdf',
        };

        c.server.get(obj).then(function(response) {
            c.data.action = undefined;

            if (response.data.attachment_url && response.data.attachment_url !== '') {
                attachment_url = response.data.attachment_url;
                $window.open(attachment_url, '_self');
            } else {
                error_message = response.data.error_message;
                alert(error_message);
            }
        });
    }

    /* 
     * Generate CSV.
     */
    c.generate_csv = function() {
        var attachment_url = '';
        var error_message = '';

        var obj = {
            action: 'generate_csv',
        };

        c.server.get(obj).then(function(response) {
            c.data.action = undefined;

            if (response.data.attachment_url && response.data.attachment_url !== '') {
                attachment_url = response.data.attachment_url;
                $window.open(attachment_url, '_self');
            } else {
                error_message = response.data.error_message;
                alert(error_message);
            }
        });
    }

    /* 
     * Generate Excel.
     */
    c.generate_excel = function() {

        var file = {
            name: 'incidents_report.xls',
            sheet: 'Incidents Report'
        };

        var uri = 'data:application/vnd.ms-excel;base64,';

        var template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40">';
        template += '<head><!--[if gte mso 9]>';
        template += '<xml>';
        template += '<x:ExcelWorkbook>';
        template += '<x:ExcelWorksheets>';
        template += '<x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet>';
        template += '</x:ExcelWorksheets>';
        template += '</x:ExcelWorkbook>';
        template += '</xml>';
        template += '<![endif]--></head>';
        template += '<body>';
        template += '<table>{table}</table>'; // Set DOM table 
        template += '</body>';
        template += '</html>';

        base64 = function(s) {
            return window.btoa(unescape(encodeURIComponent(s)));
        };

        format = function(s, c) {
            return s.replace(/{(\w+)}/g, function(m, p) {
                return c[p];
            });
        };

        var table = document.getElementById("table-data-report");

        var ctx = {
            worksheet: file.sheet,
            table: table.innerHTML
        };

        var element = document.createElement('a');

        element.setAttribute('href', uri + base64(format(template, ctx)));
        element.setAttribute('download', file.name);
        element.style.display = 'none';

        document.body.appendChild(element);

        element.click();

        document.body.removeChild(element);

    };
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.button-generate-pdf, .button-generate-csv {
  font-family: Roboto;
  margin-bottom: 24px;
}

.page-title {
	border-bottom: 1px solid #000;
	padding-bottom: 5px;
  font-weight: 600;
  font-family: Roboto;
}

/*.page-header {
	border-bottom: 0px !important;
  padding-bottom: 0px !important;
}
      
.page-header, .page-body {
	font-family: Roboto;
}

.page-body {
  font-size: 12px;
}

.table-header { 
	box-shadow: 0 0 0 2px rgb(0, 0, 0) inset;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
}

.title {
	padding: 20px;
  margin-left: 190px;
  font-size: 16px !important;
}

table.table-data thead tr th {
	padding: 10px 6px; 
	background-color: #C1C1C1;
  border-left: 2px solid #C1C1C1;
  border-right: 2px solid #C1C1C1;
	text-align: center; 
	font-weight: bold; 
	color: #000;
  border: 2px solid #000;
}
      
table.table-data tbody tr td {
	padding: 10px 6px;
	text-align: center;
  border: 2px solid #000;
  font-weight: 600;
}
      
.table-data { 
	border: 0px;
}

.font-bold {
  font-weight: bold;
}
      
.flex {
	display: flex;
}
    
.flex-1 {
	flex: 1
}
    
.flex-2 {
	flex: 2
}
    
.left {
	text-align: left;
}*/</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>incident_reports</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Incident Reports</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	var table_name = 'incident';
	
	data.attachment_url = '';
	data.error_message = '';
	data.attachment_sys_id = '';	
	data.incident_label_fields = [];
	data.incidents = [];
	
	data.incident_label_fields = get_incident_label_fields();
	data.incidents = get_incidents();

	if (input && input.action == 'generate_pdf') {
	
		var pdf_data = {
			title: 'Incident Report',
			incident_labels: get_incident_label_fields(),
			incidents: get_incidents()
		};
		
		generate_report_pdf(pdf_data);
	}
	
	if (input && input.action == 'generate_csv') {
		
		var csv_data = {
			tableTarget: 'x_821667_my_widget_csv_temp',
			columns: get_incident_label_fields(),
			rows: get_incidents()
		};
		
		generate_csv(csv_data);
	}
	
	/**
	 * Generates and returns the url of the PDF file, or an error message if the PDF file is not generated.
	 * @param {object} pdfData PDF report data.
	 * @return {string} URL of the PDF file or error message.
	 */
	function generate_report_pdf(pdf_data) {
		var response_generate_pdf = '';
		var is_url_response_generate_pdf = '';
		
		var generate_pdf = new x_821667_my_widget.GeneratePDFIncidentReport();
		
		response_generate_pdf = generate_pdf.generate(pdf_data);
		is_url_response_generate_pdf = response_generate_pdf.startsWith('http');
		
		if (response_generate_pdf && is_url_response_generate_pdf)
			data.attachment_url = response_generate_pdf;
		else
			data.error_message = response_generate_pdf;
	}
	
	function generate_csv(csv_data) {
		
		var response_generate_csv = '';
		var is_url_response_generate_csv = '';
		var csv_data_string = '';
		
		csv_data_string = JSON.stringify(csv_data);
		
		var generate_csv = new GenerationFactoryCSV();
		
		response_generate_csv = generate_csv.generate(csv_data_string);
		is_url_response_generate_csv = response_generate_csv.startsWith('http');
		
		if (response_generate_csv && is_url_response_generate_csv)
			data.attachment_url = response_generate_csv;
		else
			data.error_message = response_generate_csv;
	}
	
	function get_incident_label_fields() {
		var incident_label_names = [];
		
		var glide_record_incidents = new GlideRecord(table_name);

		glide_record_incidents.setLimit(1);
		glide_record_incidents.query();

		if (glide_record_incidents.next()) {
				incident_label_names.push(glide_record_incidents.number.getLabel());
				incident_label_names.push(glide_record_incidents.opened_at.getLabel());
				incident_label_names.push(glide_record_incidents.short_description.getLabel());
				incident_label_names.push(glide_record_incidents.caller_id.getLabel());
				incident_label_names.push(glide_record_incidents.priority.getLabel());
				incident_label_names.push(glide_record_incidents.state.getLabel());
				incident_label_names.push(glide_record_incidents.category.getLabel());
				incident_label_names.push(glide_record_incidents.assignment_group.getLabel());
				incident_label_names.push(glide_record_incidents.assigned_to.getLabel());
				incident_label_names.push(glide_record_incidents.sys_updated_on.getLabel());
		}
		
		return incident_label_names;
	}
	
	function get_incidents() {
		var incidents = [];
		
		var glide_record_incidents = new GlideRecord(table_name);

    glide_record_incidents.orderByDesc('sys_updated_on');
		glide_record_incidents.query();

		while (glide_record_incidents.next()) {
			
			var incident = {
      	number: glide_record_incidents.number.toString(),
        opened_at: glide_record_incidents.opened_at.toString(),
        short_description: glide_record_incidents.short_description.toString(),
       	caller_name: glide_record_incidents.caller_id.first_name.toString() + ' ' + glide_record_incidents.caller_id.last_name.toString(),
        priority: glide_record_incidents.priority.getDisplayValue().toString(),
        state: glide_record_incidents.state.getDisplayValue().toString(),
       	category: glide_record_incidents.category.getDisplayValue().toString(),
        assignment_group: glide_record_incidents.assignment_group.name.toString(),
        assigned_to_name: glide_record_incidents.assigned_to.first_name.toString() + ' ' + glide_record_incidents.assigned_to.last_name.toString(),
        sys_updated_on: glide_record_incidents.sys_updated_on.toString()
			};
				
      incidents.push(incident);
			
			incident = {};
		}
		
		return incidents;
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-03-04 21:13:38</sys_created_on>
        <sys_id>6b56277a971521109fd237971153afd6</sys_id>
        <sys_mod_count>35</sys_mod_count>
        <sys_name>Incident Reports</sys_name>
        <sys_package display_value="My Widgets" source="x_821667_my_widget">3d3b07fe971121109fd237971153affc</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Widgets">3d3b07fe971121109fd237971153affc</sys_scope>
        <sys_update_name>sp_widget_6b56277a971521109fd237971153afd6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-22 19:08:55</sys_updated_on>
        <template><![CDATA[<div id="report">
  
  <h4 class="page-title">{{ c.title }}</h4> <br />
	
  <button type="button" name="button-generate-pdf" class="button-generate-pdf" ng-click="c.generate_pdf()">Generate PDF</button>
  
  <button type="button" name="button-generate-excel" class="button-generate-csv" ng-click="c.generate_excel()">Generate Excel</button>
  
  <button type="button" name="button-generate-csv" class="button-generate-csv" ng-click="c.generate_csv()">Generate CSV</button>
  
  <div style="font-family: Roboto; font-size: 16px;">
    <table width="100%" style="border: 2px solid #000;">
      <tbody>
      	<tr>
          <td rowspan="3"><img src="logo_sn.png" width="110" height="110" style="margin-top: -1px; margin-bottom: -1px;"/></td>
          <td style="font-weight: bold;">${Incident Report}</td>
        </tr>
        <tr>
          <td><strong>Issue:</strong> {{ c.issue_date }} {{ c.issue_hour }}</td>
        </tr>
        <tr>
          <td><strong>Page:</strong> <span class="current-page-number"></span> de <span class="current-page-number"></span></td>
        </tr>
      </tbody>
    </table>
  </div>
  
  <div style="font-family: Roboto; font-size: 12px; margin-top: 24px;" class="report-body">
    <table style="" width="100%">
	  	<thead>
        <tr>
          <th style="padding: 10px 6px; background-color: #C1C1C1; border-left: 2px solid #C1C1C1; border-right: 2px solid #C1C1C1; text-align: center; font-weight: bold; color: #000; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;" 
              ng-repeat="label in c.incident_label_fields">
            {{ label }}
          </th>
        </tr>
      </thead>
    	<tbody>
        <tr ng-repeat="incident in c.incidents">
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.number }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.opened_at }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.short_description }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.caller_name }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.priority }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.state }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.category }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.assignment_group }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.assigned_to_name }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.sys_updated_on }}</td>
        </tr>
      </tbody>
		</table>
  </div>
  
  <div ng-show="false">
    <table style="" width="100%" id="table-data-report">
	  	<thead>
        <tr>
          <td rowspan="6"><img src="logo_sn.png" width="123" height="123" style=""/></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td colspan="4" style="font-size: 22px;"><strong>Incident Report</strong></td>
          <td></td>
          <td></td>
          <td></td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td colspan="4" style="font-size: 22px;"><strong>Issue: </strong> {{ c.issue_date }} {{ c.issue_hour }}</td>
          <td></td>
          <td></td>
          <td></td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
        </tr>
      </thead>
    	<tbody>
        <tr>
          <td style="padding: 10px 6px; background-color: #C1C1C1; border-left: 2px solid #C1C1C1; border-right: 2px solid #C1C1C1; text-align: center; font-weight: bold; color: #000; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;" 
              ng-repeat="label in c.incident_label_fields"
              >
            {{ label }}
          </td>
        </tr>
        <tr ng-repeat="incident in c.incidents">
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.number }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.opened_at }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.short_description }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.caller_name }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.priority }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.state }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.category }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.assignment_group }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.assigned_to_name }}</td>
          <td style="padding: 10px 6px; text-align: center; border: 2px solid #000; border-spacing: 0px; border-collapse: collapse;">{{ incident.sys_updated_on }}</td>
        </tr>
      </tbody>
		</table>
  </div>
  
</div>]]></template>
    </sp_widget>
</record_update>
