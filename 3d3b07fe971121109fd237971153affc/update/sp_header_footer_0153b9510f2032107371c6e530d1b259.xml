<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_header_footer">
    <sp_header_footer action="INSERT_OR_UPDATE">
        <category>standard</category>
        <client_script><![CDATA[function ($rootScope, $scope, snRecordWatcher, spUtil, $location, $uibModal, cabrillo, $timeout, $window, i18n) {

	$scope.logoText = i18n.format(i18n.getMessage('Go to {0} Homepage'), $scope.portal.title);
	$scope.collapse = function() {
		$rootScope.$emit('sp-navbar-collapse');
	}

	$scope.avatarProfile = {
		userID: $scope.user.sys_id,
		name: $scope.user.name,
		initials: $window.NOW.user_initials
	};

	if ($window.NOW.user_avatar) {
		$scope.avatarProfile.userImage = $window.NOW.user_avatar;
	}

	if (cabrillo.isNative()) {
		if ($window.innerWidth < 767) {
			$scope.isViewNative = true;
		} else {
			$scope.isViewNativeTablet = true;
		}
	}

	$scope.openPopUp = function() {
		var url = "$chat_support.do?queueID=" + $scope.data.connect_support_queue_id;
		var popup = window.open (url, "popup", "width=900, height=600");
	};

	$scope.openLogin = function () {
		$scope.modalInstance = $uibModal.open({
			templateUrl: 'modalLogin',
			scope: $scope
		});

		var pageRoot = angular.element('.sp-page-root');
		$scope.modalInstance.rendered.then(function() {
			var $uibModalStack = $injector.get('$uibModalStack');
			var modalObj = $uibModalStack.getTop();
			var modal = modalObj.value.modalDomEl;

			modal.attr('aria-label', modal.find('.panel-title').html());
			modal.attr('aria-modal', 'true');
			pageRoot.attr('aria-hidden', 'true');
		});

		$scope.modalInstance.closed.then(function() {
			pageRoot.attr('aria-hidden', 'false');
		});
	};

	var mdScreenSize = isMDScreenSize();
	$scope.showSMAvatar = isMDScreenSize();
	$scope.showAvatar = !isMDScreenSize();

	$scope.isAgentChatConfigured = g_has_agent_chat_config;

	var nav = document.getElementById('responsiveNav');

	function isMDScreenSize() {
		if (nav)
			return nav.classList.contains('responsive-tablet');
		else return false;
	}

	function updateResponsiveClasses(width) {
		if (width <= 992) {
			nav.classList.add('responsive-tablet');
			nav.classList.remove('responsive-desktop');
		} else {
			nav.classList.add('responsive-desktop');
			nav.classList.remove('responsive-tablet');
		}
		if(mdScreenSize !== isMDScreenSize() && (!$scope.showSMAvatar || !$scope.showAvatar)){
			$scope.showSMAvatar = true;
			$scope.showAvatar = true;
		}
	}

	var observer = new ResizeObserver(function(entries) {
		if (entries && entries[0]) {
			updateResponsiveClasses(entries[0].contentRect.width);
		}
	});
	observer.observe(nav);

	$rootScope.$on('sp.avatar_changed', function(evt, obj) {
		$scope.userID = "";
		$scope.newAvatarId = obj.newAvatarId;
		$timeout(function(){
			$scope.userID = $scope.user.sys_id;
			$("#profile-dropdown .sub-avatar").css("background-image", 'url("' + $scope.newAvatarId + '.iix?t=small")');
		});
	});

	$scope.isHomepage = function() {
		if (!$scope.page.id)
			return true;

		if ($scope.page.id == $scope.portal.homepage_dv)
			return true;

		return false;
	};

	$scope.openModal = function() {
		var modalInstance = $uibModal.open({
			animation: true,
			ariaLabelledBy: 'modal-title',
			ariaDescribedBy: 'modal-body',
			templateUrl: 'modalTemplate.html', // ID ou URL do template
			windowClass: 'modal-left-full',
			controller: function($scope, $uibModalInstance) {
				// Load menu widget
				spUtil.get("menu").then(function(response) {
					$scope.menuWidget = response;
				});

				$scope.$on('childToParentMessage', function(event, data) {
					if (data.action === 'close') {
						$uibModalInstance.dismiss('cancel');
					}
				});

				$scope.cancel = function () {
					$uibModalInstance.dismiss('cancel');
				};
			}
		});
	};
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.navbar {
  transition: 250ms opacity ease-in-out;
  -webkit-transition: 250ms opacity ease-in-out;
  border: 0;
  border-bottom: $sp-navbar-bottom-width solid $sp-navbar-divider-color;
}

.navbar-header {
  display: flex;
  align-items: center;
  gap: 1.2rem;
}

.navbar-fade {
  opacity: 0.4;
}

.navbar-inverse .navbar-toggle {
  border-color: $sp-navbar-toggle-border-color;
}

header[role="banner"],
.nav &gt; li &gt; a {
  max-height: 60px;
}

.nav &gt; li &gt; a span.fa{
  margin-left: 0.2rem;
}

.responsive-tablet {
  .nav &gt; li &gt; a {
    padding-right: 0.5rem;
    padding-left: 0.5rem;
  }
}

.navbar-brand {
  max-height: 60px;
  padding: 0;
  padding-bottom: 1.1rem;
}

.navbar-brand img, .navbar-brand span {
  margin-left: $sp-logo-margin-x;
  margin-right: $sp-logo-margin-x;
  margin-top: $sp-logo-margin-y;
  margin-bottom: $sp-logo-margin-y;
  display: block;
  max-height: $sp-logo-max-height;
  max-width: $sp-logo-max-width;
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  overflow: hidden;
}

.responsive-tablet {
  .navbar-brand img, .navbar-brand span {
    max-width: $sp-logo-mobile-max-width;
  }
}

.breadcrumb-container {
  background-color: $panel-bg;
}

/* for mobile app */
.navbar-inverse.is-native {
  background-color: #405060;
}

nav {
  margin-bottom: 0px;
  border-radius: 0px;

  .toggle-dropdown {
    height: 60px;
  }

}

.navbar-right {
  padding-right: 0px;
  padding-left: 7px;
}

.navbar-nav {
  margin: 0px;
}

// PRB711244: Dropdown menu is scrollable when too many items
.scrollable-dropdown {
  max-height: 80vh;
  overflow: auto;
  height: auto;
}

.is-native {
  .scrollable-dropdown {
    max-height: 100vh;
    overflow: scroll;
    height: auto;
  }
}

/* PRB923910: Fix for Service Portal - Header Poorly Aligned in Safari */
.responsive-desktop {
  .navbar-right {
    display: flex !important;
    height: auto !important;
  }
}

.responsive-tablet {
  .navbar-toggle {
    display: block;
  }
  .navbar-header {
    float: none;
  }
  .navbar-left,.navbar-right {
    float: none !important;
  }
  .navbar-nav {
    float: none !important;
  }
  .navbar-nav &gt; li {
    float: none;
  }
  .navbar-nav &gt; li &gt; a {
    padding-top: 1rem ;
    padding-bottom: 1rem;
  }
}

.menu-hamburger {
	color: #cbe9fc;
}

@media screen and (-ms-high-contrast: active), (forced-colors: active) {
  .navbar-brand,
  .navbar-nav &gt;li &gt;a,
  .skip-link,
  .btn.btn-primary,
  .btn.btn-danger,
  .navbar-inverse .navbar-toggle {
    &amp;:focus {
      outline-offset: -4px !important;
    }
  }
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>stock-header-my-widgets</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element) {
	var prevFocusIndex = -1;// This is used for prev focus of nav-bar(avatar) drop down items when its visible.
	var KEY = {
		TAB : 9,
		ENTER : 13,
		ESC : 27,
		SPACE_BAR : 32,
		LEFT : 37,
		UP : 38,
		RIGHT : 39,
		DOWN : 40
	}
	
	function isMDScreenSize() {
		return window.matchMedia('(max-width: 992px)').matches;
	}
	
	var navbarContainer = $('#sp-nav-bar');
	navbarContainer.on('shown.bs.collapse', function () {
		$('a:visible', navbarContainer).first().focus();
	});
	
	$(document).keyup(function(event) {
		var mdScreenSize = isMDScreenSize();
		if (event.which == KEY.TAB || event.which == KEY.LEFT || event.which == KEY.RIGHT) { //tab key handler + arrow keys
			if (!mdScreenSize && $(event.target).parents(".dropdown-menu").length == 0) { //if we are NOT inside a dropdown...
				//close the dropdowns
				$(".dropdown.open", $(element)).removeClass("open");
				$("[data-toggle='dropdown']", $(element)).attr("aria-expanded", "false");
				prevFocusIndex = -1;
			}
		} else if(event.which == KEY.UP || event.which == KEY.DOWN) {
			var parent = $(event.target).parents('.dropdown-menu');
			
			// To support custom drop downs like cart and wish list.
			if (parent.hasClass('custom-drop-down')) return;
			
			if (parent.length) {
				var items = $(parent).find('li a, li button');
				if (!items.length)
					return;

				var index = items.index(items.filter(':focus'));
				if(index == -1) return;
				
				if (prevFocusIndex == index) {
					if (index == 0)
						index = items.length - 1;
					else if (index == items.length - 1)
						index = 0;
						
						items[index].focus();
				} else if (event.which == KEY.UP && index == 0 && prevFocusIndex == -1) { // to handle newly opened dropdown on keyup
					index = items.length - 1;
					items[index].focus();
				}
				prevFocusIndex = index;
			
			} else {
				// Upon down/up arrow key event from the menu target element,
        // focus the first/last menu item to be consistent with click behavior and conform to standard menubar pattern below
				// https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-1/menubar-1.html
				if ($(event.target).is('[data-toggle="dropdown"]')) {
					var parent = $(event.target).parent().find('.dropdown-menu');
					
					// To support custom drop downs like cart and wish list.
					if (parent.hasClass('custom-drop-down')) return;
					
					var items = $(parent).find('li a, li button');
					if (!items.length) return;
					
					var index = -1;
					if(event.which == KEY.DOWN) //down
						index = 0;
					else if(event.which == KEY.UP) //up
						index = items.length > 0 ? items.length-1 : 0;
					
					items[index].focus();
					prevFocusIndex = index;
					
				}		
			}
		}
		// on esc/close of the menu, reset the index
		if(event.which == KEY.ESC) {
			prevFocusIndex = -1;
			if (mdScreenSize && $('.navbar-right').attr("aria-expanded")) {
				closeMobileMenu();
				
				if ($(event.target).parents(".navbar-right").length > 0)
					$('.navbar-toggle').focus();
			}
		}
		
		if (event.which == KEY.ENTER || event.which == KEY.SPACE_BAR)
			$(event.target).parent(".dropdown.open").find("ul.dropdown-menu li:first-child a").focus();
	});

	$(element).on('click.nav','.navbar-collapse.in',function(e) {
		var target = $(e.target);
		if (target.is('a')) {
			if (target.hasClass('sp-menu-has-items'))
				return; // menu item has a submenu, so just toggle it

			// collapse mobile nav if clicked an anchor
			$(this).removeClass('in').addClass('collapse');
			return;
		}

		if (target.parent().hasClass("toggle-dropdown")) {
			// collapse mobile nav if parent has toggle-dropdown class
			$(this).removeClass('in').addClass('collapse');
			return;
		}

		// if neither target nor parent is an anchor, do nothing
		if (!target.parent().is('a'))
			return;

		// collapse mobile nav if target is part of a submenu
		if (target.parents("ul.dropdown-menu").length > 0)
			$(this).removeClass('in').addClass('collapse');
	});

	// clicking outside the mobile menu should close the mobile menu
	$(document).on('click', function(e) {
		var target = $(e.target);
		if (target.parents('.navbar-right').length == 0) {
			closeMobileMenu();
		}
	});
	
	// Close the mobile menu when focus goes out of the menu
	$('.navbar-right').on('keydown', 'a', function(event) {
		if (($(this).is($('.navbar-right a').last()) && event.which == KEY.TAB && !event.shiftKey) || ($(this).is($('.navbar-right a').first()) && event.which == KEY.TAB && event.shiftKey)) {
			closeMobileMenu();
			setTimeout(function () {
				window.scrollBy(0,-200);
			});
		}
	});
	
	function closeMobileMenu() {
		$('.navbar-right').collapse('hide');
	}
}]]></link>
        <name>Stock Header - My Widgets</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[// Defines the support queue ID that will be linked to by the Live Chat link in header
data.connect_support_queue_id = $sp.getValue('sp_chat_queue');
data.login_page = $sp.getValue('login_page');
data.profileBtnMsg = gs.getMessage("User options");
data.toggleMsg = gs.getMessage("Toggle navigation");
var menu = $sp.getValue("sp_rectangle_menu");
data.menu = $sp.getWidgetFromInstance(menu);
//data.langSelector = pm.isActive('com.glide.i18n')? $sp.getWidget('sp-lang-selector') : "";
if (data.menu && data.menu.data) {
	data.menu.data.replace = true;
	// Hide login if menu already has link to login
	data.hasLogin = false;
	if (data.menu.data.menu.items) {
		data.hasMenuItems = data.menu.data.menu.items.length > 0;
		for(var i in data.menu.data.menu.items) {
			var item = data.menu.data.menu.items[i];
			if (item.type == 'page' && item.sp_page == data.login_page)
				data.hasLogin = true;
		}
	}
}

data.loginWidget = $sp.getWidgetFromInstance('login-modal');
]]></script>
        <servicenow>false</servicenow>
        <static>false</static>
        <sys_class_name>sp_header_footer</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-10-11 19:08:49</sys_created_on>
        <sys_id>0153b9510f2032107371c6e530d1b259</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Stock Header - My Widgets</sys_name>
        <sys_package display_value="My Widgets" source="x_821667_my_widget">3d3b07fe971121109fd237971153affc</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Widgets">3d3b07fe971121109fd237971153affc</sys_scope>
        <sys_update_name>sp_header_footer_0153b9510f2032107371c6e530d1b259</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-10-11 19:31:18</sys_updated_on>
        <template><![CDATA[<div>
  <nav id="responsiveNav" class="navbar-inverse" ng-class="::{'navbar':!isViewNative, 'is-native': isViewNative}"
       role="navigation" aria-label="${Primary}">
    <div ng-show="::!isViewNative" class="navbar-header">
      <div class="menu-hamburger">
        <i class="fa fa-bars" aria-hidden="true" ng-click="openModal()"></i>
        <style>
          .modal-left-full .modal-dialog {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: 40rem;
            margin: 0;
            transform: none;
            border-radius: 0;            
            z-index: 1050;
          }
          .modal-left-full .modal-content {
            height: 100%;
            border-radius: 0;
          }          
        </style>
        <script type="text/ng-template" id="modalTemplate.html">
          <div class="modal-body">
            <sp-widget widget="menuWidget"></sp-widget>
          </div>
        </script>
      </div>
      <a class="navbar-brand" ng-if="::!portal.logo" href="?id={{::portal.homepage_dv}}"><span ng-bind="portal.title"></span></a>
      <a class="navbar-brand navbar-brand-logo" ng-if="::portal.logo" ng-href="?id={{::portal.homepage_dv}}" ng-click="collapse()" aria-label="{{::logoText}}">
        <img ng-src="{{::portal.logo}}" title="{{::portal.title}}" alt="{{::portal.logo_alt_text || portal.title}} ${Logo}" />
      </a>
      <button ng-if="data.hasMenuItems || (!user.logged_in && page.id != portal.login_page_dv && !data.hasLogin) || user.logged_in" type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-placement="bottom" data-toggle-second="tooltip" data-original-title="{{::data.toggleMsg}}" data-target="#sp-nav-bar" aria-haspopup="menu">
        <span class="sr-only">${Toggle navigation}</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
    </div>

    <div sp-navbar-toggle="" class="collapse navbar-right" id="sp-nav-bar" role="navigation">
      <!-- Include The Menu -->
      <sp-widget widget="::data.menu"></sp-widget>
      <!-- Language Selector Menu -->
      <sp-widget widget="::data.langSelector"></sp-widget>
      <ul ng-if="(!user.logged_in && page.id != portal.login_page_dv && !data.hasLogin)" class="nav navbar-nav" role="presentation">
        <li role="presentation"><a href ng-click="::openLogin()">${Login}</a></li>
      </ul>
      <ul ng-if="user.logged_in" class="nav navbar-nav">
        <!-- chat, avatar, and logout -->
        <li ng-if="::(data.connect_support_queue_id && !isAgentChatConfigured)"><a href ng-click="openPopUp()" role="button">${Live Chat}</a></li>
        <li ng-if="showAvatar" class="hidden-xs hidden-sm dropdown">
          <a href class="toggle-dropdown" data-toggle="dropdown" aria-expanded="false" aria-label="{{::data.profileBtnMsg}}: {{::user.name}}" id="profile-dropdown"  role="button" aria-haspopup="true">
            <span class="navbar-avatar" aria-hidden="true"><sn-avatar class="avatar-small-medium" primary="avatarProfile" /></span>
            <span class="visible-lg-inline">{{::user.name}}</span>
          </a>
          <ul class="dropdown-menu" aria-label="{{::data.profileBtnMsg}}">
            <li><a tabindex="-1" ng-href="?id=user_profile&sys_id={{::user.sys_id}}">${Profile}</a></li>
            <li ng-if="::!(isViewNative || isViewNativeTablet)"><a tabindex="-1" href="{{::portal.logoutUrl}}">${Logout}</a></li>
          </ul>
        </li>
        <li ng-if="showSMAvatar" class="visible-xs-block visible-sm-block"><a ng-href="?id=user_profile&sys_id={{::user.sys_id}}" ng-click="collapse()">
          <span class="navbar-avatar"><sn-avatar class="avatar-small-medium" primary="avatarProfile" /></span>{{::user.name}}</a>
        </li>
        <li ng-if="::!(isViewNative || isViewNativeTablet)" class="visible-xs-block visible-sm-block"><a ng-href="{{::portal.logoutUrl}}" ng-click="collapse()">${Logout}</a></li>
      </ul>
    </div>
  </nav>
</div>]]></template>
    </sp_header_footer>
</record_update>
