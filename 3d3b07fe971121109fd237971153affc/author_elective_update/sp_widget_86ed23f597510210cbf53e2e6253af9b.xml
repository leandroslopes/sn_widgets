<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>standard</category>
        <client_script><![CDATA[api.controller=function ($scope, spUtil, $rootScope, $timeout, spAriaUtil, spGtd, $window, i18n) {
	var KEY_ENTER = 13;
	$scope.collapse = function() {
		$rootScope.$emit('sp-navbar-collapse');
	}
	$scope.loadingIndicator = $rootScope.loadingIndicator;
	$scope.cartItemCount = 0;
	$scope.wishlistItemCount = 0;
	$scope.toursTooltipEnabled = true;
	$scope.currentTour = spGtd.getCurrentTour();
	$scope.accessibilityEnabled = spAriaUtil.g_accessibility === "true";
	var isCartCountSetAtleastOnce = false;
	var cancelTooltipPromise;
	$scope.$on("$sp.service_catalog.cart.count", function($evt, count) {
		var previousCount = $scope.cartItemCount;
		$scope.cartItemCount = count;
		if (previousCount >= $scope.cartItemCount)
			return;
		if (!isCartCountSetAtleastOnce) {
			isCartCountSetAtleastOnce = true;
			return;
		}
		$timeout.cancel(cancelTooltipPromise);
		$timeout(function() {
			setCartTooltipVisibility(true);
		});
		cancelTooltipPromise = $timeout(function() {
			setCartTooltipVisibility(false);
		}, 3000);
	});
	$scope.$on("$sp.service_catalog.wishlist.count", function($evt, count) {
		$scope.wishlistItemCount = count;
	});
	$scope.$on('sp_loading_indicator', function(e, value) {
		$scope.loadingIndicator = value;
	});
	function setCartTooltipVisibility(value) {
		$("#cart-dropdown").tooltip(value ? "show": "hide");
	};
	$scope.toggleTours = function() {
		var action = $scope.toursTooltipEnabled ? 'disable' : 'enable';
		$scope.toursTooltipEnabled = $scope.toursTooltipEnabled ? false : true;
		$('[data-toggle-second="tooltip"]').tooltip(action);
		if(action == 'disable')
			$('[data-toggle-second="tooltip"]').tooltip('hide');
		$scope.currentTour = spGtd.getCurrentTour();
	}
	$scope.endTour = function() {
	  spGtd.endTour();
	}
	$scope.endTourByKeyDown = function(e) {
		if(e.which === KEY_ENTER) {
		  spGtd.endTour();
		}
	}
	$scope.onToursItemBlur = function() {
		$('[data-toggle-second="tooltip"]').tooltip('enable');
		$scope.toursTooltipEnabled = true;
	}
	// PRB1108244: visibleItems array is used to improve keyboard nav
	// in menu, refresh it as needed
	$scope.$watch('data.menu.items', function() {
		$scope.visibleItems = [];
		if ($scope.data.menu.items) {
			for (var i in $scope.data.menu.items) {
				var item = $scope.data.menu.items[i];
				if (item.items || (item.scriptedItems && item.scriptedItems.count != 0))
					$scope.visibleItems.push(item);
			}
		}
	}, true);
  $scope.$on('sp-tour-ended', function() {
	  $timeout(function(){$scope.currentTour = null});
    $timeout(function() {
		  $('.dropdown-menu a:visible', $('.gtd-dropdown-container')).first().focus();
	  }, 5);
  });
  $scope.$on('sp-menu-update-tours', function(event, tours) {
    $scope.data.showTours = $scope.data.showTours && !spUtil.isMobile();
    if ($scope.data.showTours === false) {
			$scope.data.guidedTours = null;
			return;
	}
    var guidedToursLabel = 'Guided Tours';
    $scope.data.guidedTours = {
		label: guidedToursLabel,
		collection: []
	};
    $scope.tooltipTours = tours.length === 1 ? i18n.getMessage('This page currently has 1 tour') : i18n.getMessage('This page currently has {0} tours').withValues([tours.length])
    if (tours.length > 0) {
      $scope.data.guidedTours.collection = tours.map(function(t) {
        return {
          title:  t.name,
          id: t.id,
          clicked: function() {
            spGtd.launch(t.id);
          }
        };
      });
    }
  });
	// Get list of record watchers
	var record_watchers = [];
	if ($scope.data.menu.items) {
		for(var i in $scope.data.menu.items) {
			var item = $scope.data.menu.items[i];
			if (item.type == 'scripted') {
				if (item.scriptedItems.record_watchers)
					record_watchers = record_watchers.concat(item.scriptedItems.record_watchers);
			}
			if (item.type == 'filtered') {
				record_watchers.push({'table':item.table,'filter':item.filter});
			}
		}
	}
	// Init record watchers
	for (var y in record_watchers){
		var watcher = record_watchers[y];
		spUtil.recordWatch($scope, watcher.table, watcher.filter);
	}
  $rootScope.$broadcast('sp-header-loaded');
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.header-loader {
	float: left;
  	width: 24px;
  	position: relative;
  	top: 24px;
}

.cart-dropdown, .wishlist-menu, .gtd-dropdown-container .empty-dropdown {
  width: 350px;
  padding: 0;
  z-index: 1000;
  border-top-left-radius: 4px !important;
  border-top-right-radius: 4px !important;

  ul {
    max-height: 300px;
    overflow: auto;
  }

  .subtotal {
    display: block;
  }

  .item-image {
    padding: 0;
    margin: 0;
    text-align: center;
    max-width:100%;
    height:auto;
  }
  label, p {
    padding: 0;
    margin: 0;
  }
  .media {
    padding: 0;
    margin: 0;
  }
  .media-left &gt; a {
    display: block;
    width: 48px;
    max-width: 48px;
  }
  .media-body {
    label {
      font-weight: bold;
    }
  }
  li.media {
    border-top: 1px solid #cccccc;
    padding: 1rem;
  }
  .panel {
    margin: 0;
  }
  .panel .panel-body {
    padding: 0;
  }
  .btn-clear {
		color: #333;
    background-color: #fff;
  }
  p.quantity-price {
    padding-top: 0.5rem;
    span {
      color: $text-muted;
      padding-right: 0.5rem;
      unicode-bidi: isolate;
    }
  }
  .align-right {
  	text-align: right;
  }
}



.item-added-tooltip, wishlist-item-added-tooltip {
  width: 184px;
  font-size: 14px;
}

.open &gt; .dropdown-menu {
	padding: 0.5rem 0.2rem !important;
}

.gtd-dropdown-container {
  .empty-tour-content{
    text-align: center;
    margin:40px 20px;
  }
  .dropdown-menu li {
    a {
      cursor: pointer;
    }
    min-width: 20em;
  }
  .label-as-badge{
    width: 12px;
    height: 12px;
    display: inline-block;
    padding: 0px;
    padding-top: 2px;
  }
  .badge-container {
    display: inline-block;
    width: 12px;
  }
  .end-tour-menu {
    width: 300px;
    background-color: #fff;
    .end-tour-body {
       display:flex; 
       flex-flow: column; 
       margin: 5px; 
       row-gap: 8px;
    }
    .end-tour-name {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }
}

@media  (max-width: 845px) and (min-width: 768px)  {
	.header-menu-item ul {
		right: auto;
		left: auto;
	}
}
@media (max-width: 767px) {
	.empty-dropdown, .end-tour-menu {
		width: auto !important;
	}
}
</css>
        <data_table>sp_instance_menu</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title</field_list>
        <has_preview>false</has_preview>
        <id>govbr-demo-header-menu</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, elem) {
		function isMDScreenSize() {
		return window.matchMedia('(max-width: 992px)').matches;
	}
	
	var KEY = {
		TAB : 9,
		ENTER : 13,
		ESC : 27,
		SPACE_BAR : 32,
		LEFT : 37,
		UP : 38,
		RIGHT : 39,
		DOWN : 40
	}

	$('.navbar').on('keydown','[id="sp-nav-bar"]:visible',function(e) {
		var mdScreenSize = isMDScreenSize();
		var target = e.target;
		if (target.localName == 'a') {
			var currentMenuItem = $(target).parents('li').first();
			var parentUL = currentMenuItem.parents('ul').first();
			
			var menuItem = currentMenuItem;
			var targetInSubmenu = !currentMenuItem.is('.header-menu-item');
			if (targetInSubmenu) {
				menuItem = $(target).parents('li.header-menu-item').first();
			}
			
			if (mdScreenSize && e.keyCode == KEY.RIGHT) {
				if ($(target).is('.dropdown-toggle') || $(target).is('[data-toggle="dropdown"]')) { // Target is a main menu item with sub-menu
					e.preventDefault();
					e.stopPropagation();
					currentMenuItem.addClass('open');
					$('> a:visible', menuItem).attr("aria-expanded", "true");
					currentMenuItem.find('.dropdown-menu a:visible').first().focus();
				}
			} else if (mdScreenSize && e.keyCode == KEY.LEFT) {
				if (parentUL.is('.dropdown-menu')) { // Target is a sub-menu item
					parentUL.parents('.header-menu-item').first().removeClass('open').find('> a:visible').first().focus();
					setAriaExpnadedFalse(menuItem);
				}
			} else if ((mdScreenSize && e.keyCode == KEY.UP) || (!mdScreenSize && e.keyCode == KEY.LEFT)) {
				handleFocus(false, e, mdScreenSize, menuItem, currentMenuItem, parentUL, targetInSubmenu);
			} else if((mdScreenSize && e.keyCode == KEY.DOWN) || (!mdScreenSize && e.keyCode == KEY.RIGHT)) {
				handleFocus(true, e, mdScreenSize, menuItem, currentMenuItem, parentUL, targetInSubmenu);
			}
			if(e.keyCode == KEY.TAB) {
				if($(target).parents('li').hasClass('open'))
					$(target).dropdown('toggle');
				setAriaExpnadedFalse(menuItem);
			}
		}
	});
	
	function setAriaExpnadedFalse(menuItem) {
			if (menuItem.is('.dropdown'))
				$('> a:visible', menuItem).attr("aria-expanded", "false");		
	}

	function handleFocus(next, event, mdScreenSize, menuItem, currentMenuItem, parentUL, targetInSubmenu) {
		event.preventDefault();
		
		if (targetInSubmenu) {
			var itemsInSubmenu = parentUL.find('li.visible');
			var firstSubmenuItem = itemsInSubmenu.first();
			var lastSubmenuItem = itemsInSubmenu.last();
		}
		var allMenuItems = $('li.header-menu-item:visible', '.navbar');
		var firstMenuItem = allMenuItems.first();
		var lastMenuItem = allMenuItems.last();

		if (!mdScreenSize) {
			currentMenuItem.removeClass('open');
			setAriaExpnadedFalse(menuItem);

			if (targetInSubmenu)
				menuItem.removeClass('open');
		} else {
			event.stopPropagation();
			if (!targetInSubmenu) {
				menuItem.removeClass('open');
				setAriaExpnadedFalse(menuItem);
			}
		}

		var indexMenuItem = allMenuItems.index(menuItem);
		var targetMenuItem = next ? allMenuItems.eq(indexMenuItem + 1) : allMenuItems.eq(indexMenuItem - 1);
		var menuItemToFocus = targetMenuItem.length ? targetMenuItem : next ? firstMenuItem: lastMenuItem; //enable circular navigation

		if (mdScreenSize && targetInSubmenu) {
			targetMenuItem = next ? currentMenuItem.nextAll('li:visible').first() : currentMenuItem.prevAll('li:visible').first();
			menuItemToFocus = targetMenuItem.length ? targetMenuItem : next ? firstSubmenuItem: lastSubmenuItem; //enable circular navigation
		}
		menuItemToFocus.find('a').focus();
	}

	$(elem).on('click', '[data-toggle="dropdown"]', function(e) {
		var $target = $(e.target);
		setTimeout(function() {
			$('.dropdown-menu a:visible', $target.parents('.header-menu-item')).first().focus();
		}, 0);
	});

	setTimeout(function(){
		$('[data-toggle-second="tooltip"]').tooltip();
		bsDropdownTooltipShim('#cart-dropdown', '#cart-dropdown-wrapper');
		bsDropdownTooltipShim('#wishlist-menu', "#wishlist-menu-wrapper");
	});
	
	function bsDropdownTooltipShim(tooltipTrigger, dropdownParent) {
		if ($(dropdownParent).length) {
			$(tooltipTrigger).tooltip();
			$(dropdownParent).on('shown.bs.dropdown', function() {
				$(tooltipTrigger).tooltip('disable');
				$(tooltipTrigger).tooltip('hide');
			});
			$(dropdownParent).on('hidden.bs.dropdown', function() {
				$(tooltipTrigger).tooltip('enable');
			});
		}
	}
}]]></link>
        <name>GOV.BR Demo Header Menu</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function(){
	// build menus
	var menu_id = $sp.getValue('sys_id'); // instance sys_id
	data.menu = {};
	data.menu.items = $sp.getMenuItems(menu_id);
	data.isLoggedIn = GlideSession.get().isLoggedIn();
	data.guidedTours = {};
	// Show tours only if gtd's sp sys property is set
	data.showTours = (gs.getProperty('com.snc.guided_tours.sp.enable') === 'true') && data.isLoggedIn;
	if (!data.showTours) {
	data.guidedTours = null;
	}
	var catalogArr = ($sp.getCatalogs().value + "").split(",");

	catalogArr.forEach(function(catalog) {
		data.showWishlist = data.showWishlist || new sn_sc.Catalog(catalog).isWishlistEnabled();
	});
	if (data.isLoggedIn) {
		if (options.enable_wishlist && data.showWishlist)
			data.wishlistWidget = $sp.getWidget("sc_wishlist_cart", {wishlistTemplate: "small_wishlist.html", auto_update_wishlist:options.auto_update_wishlist});
		if (options.enable_cart) {
			if (gs.getProperty("glide.sc.portal.use_cart_v2_header", "false") === "true")
				data.cartWidget = $sp.getWidget("sc-shopping-cart-v2", {cartTemplate: "small_shopping_cart_v2.html", auto_update_cart:options.auto_update_cart});
			else
				data.cartWidget = $sp.getWidget("sc-shopping-cart", {cartTemplate: "small_shopping_cart.html", auto_update_cart:options.auto_update_cart});
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>leandro.lopes</sys_created_by>
        <sys_created_on>2024-04-02 11:34:58</sys_created_on>
        <sys_id>86ed23f597510210cbf53e2e6253af9b</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>GOV.BR Demo Header Menu</sys_name>
        <sys_package display_value="My Widgets" source="x_821667_my_widget">3d3b07fe971121109fd237971153affc</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Widgets">3d3b07fe971121109fd237971153affc</sys_scope>
        <sys_update_name>sp_widget_86ed23f597510210cbf53e2e6253af9b</sys_update_name>
        <sys_updated_by>leandro.lopes</sys_updated_by>
        <sys_updated_on>2024-04-02 11:36:12</sys_updated_on>
        <template><![CDATA[<ul class="nav navbar-nav" aria-label="${Header}">
  <div class="header-loader" ng-class="{'invisible': !loadingIndicator}">
    <div class="hidden-xs hidden-sm sp-loading-indicator la-sm">
      <div></div>
      <div></div>
      <div></div>
    </div>
  </div>
  <li ng-repeat="item in visibleItems" ng-class="{dropdown: item.items.length > 0, 'header-menu-item': true}" ng-include="'menuTemplate'"></li>
<!-- Wishlist menu -->
  <li ng-if="options.enable_wishlist && data.isLoggedIn && data.showWishlist && !accessibilityEnabled" id="wishlist-menu-wrapper" class="dropdown hidden-xs header-menu-item">
  	<a role="button" href="javascript:void(0)"
       data-toggle="dropdown"
       id="wishlist-menu"
       data-placement="bottom"
       data-original-title="${Your Wish List currently has} {{wishlistItemCount}} ${items}"
       aria-label="${Wish List}">
      <span ng-bind-html="'${Wish List}'" aria-hidden="true"></span>
      <span ng-if="wishlistItemCount > 0" aria-hidden="true" class="label label-as-badge label-primary sp-navbar-badge-count">{{wishlistItemCount}}</span>
		</a>
    <div class="dropdown-menu wishlist-menu custom-drop-down">
      <sp-widget widget="data.wishlistWidget"></sp-widget>
    </div>
  </li>
  <li ng-if="options.enable_wishlist && data.isLoggedIn && data.showWishlist" class="dropdown" ng-class="{'visible-xs': !accessibilityEnabled}">
  	<a href="?id=sc_wishlist"
       title="${Your Wish List currently has} {{wishlistItemCount}} ${items}"
       data-toggle="tooltip"
       data-placement="bottom"
       class="toggle-dropdown"
       role="button"
       aria-label="${Your Wish List currently has} {{wishlistItemCount}} ${items}">
      <span ng-bind-html="'${Wish List}'" aria-hidden="true"></span>
      <span ng-if="wishlistItemCount > 0" aria-hidden="true" class="label label-as-badge label-primary sp-navbar-badge-count">{{wishlistItemCount}}</span>
		</a>
  </li>
  <!-- Shopping cart stuff -->
 <li ng-if="::options.enable_cart && data.isLoggedIn && !accessibilityEnabled" id="cart-dropdown-wrapper" class="dropdown hidden-xs header-menu-item">
  	<a href
       data-toggle="dropdown"
       id="cart-dropdown"
       data-placement="bottom"
       data-original-title="${Your shopping cart currently has} {{cartItemCount}} ${items}"
       aria-label="${Shopping cart}"
       role="button">
    	<i class="fa fa-shopping-cart" aria-hidden="true"></i>
      <span ng-bind-html="'${Cart}'" aria-hidden="true"></span>
      <span ng-if="cartItemCount > 0" aria-hidden="true" class="label label-as-badge label-primary sp-navbar-badge-count">{{cartItemCount}}</span>
		</a>
    <div class="dropdown-menu cart-dropdown custom-drop-down">
      <sp-widget widget="data.cartWidget"></sp-widget>
    </div>
  </li>
  <li ng-if="::options.enable_cart && data.isLoggedIn" class="header-menu-item" ng-class="::{'visible-xs': !accessibilityEnabled}">
  	<a ng-href="?id=sc_cart"
       ng-click="collapse()"
       data-toggle="tooltip"
       data-placement="bottom"
       data-original-title="${Your shopping cart currently has} {{cartItemCount}} ${items}"
       class="toggle-dropdown"
       aria-label="${Your shopping cart currently has} {{cartItemCount}} ${items}">
    	<i class="fa fa-shopping-cart" aria-hidden="true"></i>
      <span ng-bind-html="'${Cart}'" aria-hidden="true"></span>
      <span ng-if="cartItemCount > 0" aria-hidden="true" class="label label-as-badge label-primary sp-navbar-badge-count">{{cartItemCount}}</span>
	</a>
  </li>
  <li ng-if="data.isLoggedIn && data.guidedTours" class="dropdown header-menu-item gtd-dropdown-container">
    <a href
       data-toggle="dropdown"
       id="tour-dropdown"
       data-placement="bottom"
       data-toggle-second="tooltip"
       ng-click="toggleTours()"
       ng-blur="onToursItemBlur()"
       data-original-title="{{tooltipTours}}"
       aria-label="{{data.guidedTours.label}}"
       role="button">
      <span ng-bind-html="'${Tours}'" aria-hidden="true"></span>
      <span class='badge-container' ng-if="data.guidedTours.collection.length > 0">
        <span aria-hidden="true" class="label label-as-badge label-primary sp-navbar-badge-count">
          &nbsp;
       </span>
      </span>
    </a>
    <div ng-if="data.guidedTours.collection.length < 1 && !currentTour" class="dropdown-menu empty-dropdown">
      <div class="panel ng-scope">
       <div class="panel-body">
        <div class="empty-tour-content" role="alert">
         <h4>${You have no tours on this page}</h4>
         <p>${Tours appear when your administrator creates them on specific pages}</p>
        </div>
       </div>
      </div>
    </div>
    <ul ng-if="data.guidedTours.collection.length > 0 && !currentTour" class="dropdown-menu"
        role="menu" aria-label="${Tours}">
      <li ng-repeat="mi in data.guidedTours.collection"
          class="ng-scope dropdown-menu-line">
        <a role="button" href title="{{::mi.title}}" target="{{::mi.target}}" ng-click="mi.clicked()">
          {{::mi.title | characters:60}}
        </a>
      </li>
    </ul>
    <div ng-if="currentTour" tabindex="0" class="dropdown-menu end-tour-menu" aria-label="${End Current Tour}: {{currentTour.name}}">
      <div class="end-tour-body ng-scope">
          <a type="button" class="btn btn-primary" tabindex="0" ng-click="endTour()" ng-keydown="endTourByKeyDown($event)">${End Tour}</a>
          <p class="end-tour-name" title="{{currentTour.name}}">${Current Tour}: {{currentTour.name}}</p>
	    </div>
    </div>
  </li>
</ul>]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="My Widgets">3d3b07fe971121109fd237971153affc</application>
        <file_path/>
        <instance_id>7ce0729fdb91f410e26fd7c8f4961917</instance_id>
        <instance_name>dev118034</instance_name>
        <name>sp_widget_86ed23f597510210cbf53e2e6253af9b</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;standard&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[api.controller=function ($scope, spUtil, $rootScope, $timeout, spAriaUtil, spGtd, $window, i18n) {
	var KEY_ENTER = 13;
	$scope.collapse = function() {
		$rootScope.$emit('sp-navbar-collapse');
	}
	$scope.loadingIndicator = $rootScope.loadingIndicator;
	$scope.cartItemCount = 0;
	$scope.wishlistItemCount = 0;
	$scope.toursTooltipEnabled = true;
	$scope.currentTour = spGtd.getCurrentTour();
	$scope.accessibilityEnabled = spAriaUtil.g_accessibility === "true";
	var isCartCountSetAtleastOnce = false;
	var cancelTooltipPromise;
	$scope.$on("$sp.service_catalog.cart.count", function($evt, count) {
		var previousCount = $scope.cartItemCount;
		$scope.cartItemCount = count;
		if (previousCount &gt;= $scope.cartItemCount)
			return;
		if (!isCartCountSetAtleastOnce) {
			isCartCountSetAtleastOnce = true;
			return;
		}
		$timeout.cancel(cancelTooltipPromise);
		$timeout(function() {
			setCartTooltipVisibility(true);
		});
		cancelTooltipPromise = $timeout(function() {
			setCartTooltipVisibility(false);
		}, 3000);
	});
	$scope.$on("$sp.service_catalog.wishlist.count", function($evt, count) {
		$scope.wishlistItemCount = count;
	});
	$scope.$on('sp_loading_indicator', function(e, value) {
		$scope.loadingIndicator = value;
	});
	function setCartTooltipVisibility(value) {
		$("#cart-dropdown").tooltip(value ? "show": "hide");
	};
	$scope.toggleTours = function() {
		var action = $scope.toursTooltipEnabled ? 'disable' : 'enable';
		$scope.toursTooltipEnabled = $scope.toursTooltipEnabled ? false : true;
		$('[data-toggle-second="tooltip"]').tooltip(action);
		if(action == 'disable')
			$('[data-toggle-second="tooltip"]').tooltip('hide');
		$scope.currentTour = spGtd.getCurrentTour();
	}
	$scope.endTour = function() {
	  spGtd.endTour();
	}
	$scope.endTourByKeyDown = function(e) {
		if(e.which === KEY_ENTER) {
		  spGtd.endTour();
		}
	}
	$scope.onToursItemBlur = function() {
		$('[data-toggle-second="tooltip"]').tooltip('enable');
		$scope.toursTooltipEnabled = true;
	}
	// PRB1108244: visibleItems array is used to improve keyboard nav
	// in menu, refresh it as needed
	$scope.$watch('data.menu.items', function() {
		$scope.visibleItems = [];
		if ($scope.data.menu.items) {
			for (var i in $scope.data.menu.items) {
				var item = $scope.data.menu.items[i];
				if (item.items || (item.scriptedItems &amp;&amp; item.scriptedItems.count != 0))
					$scope.visibleItems.push(item);
			}
		}
	}, true);
  $scope.$on('sp-tour-ended', function() {
	  $timeout(function(){$scope.currentTour = null});
    $timeout(function() {
		  $('.dropdown-menu a:visible', $('.gtd-dropdown-container')).first().focus();
	  }, 5);
  });
  $scope.$on('sp-menu-update-tours', function(event, tours) {
    $scope.data.showTours = $scope.data.showTours &amp;&amp; !spUtil.isMobile();
    if ($scope.data.showTours === false) {
			$scope.data.guidedTours = null;
			return;
	}
    var guidedToursLabel = 'Guided Tours';
    $scope.data.guidedTours = {
		label: guidedToursLabel,
		collection: []
	};
    $scope.tooltipTours = tours.length === 1 ? i18n.getMessage('This page currently has 1 tour') : i18n.getMessage('This page currently has {0} tours').withValues([tours.length])
    if (tours.length &gt; 0) {
      $scope.data.guidedTours.collection = tours.map(function(t) {
        return {
          title:  t.name,
          id: t.id,
          clicked: function() {
            spGtd.launch(t.id);
          }
        };
      });
    }
  });
	// Get list of record watchers
	var record_watchers = [];
	if ($scope.data.menu.items) {
		for(var i in $scope.data.menu.items) {
			var item = $scope.data.menu.items[i];
			if (item.type == 'scripted') {
				if (item.scriptedItems.record_watchers)
					record_watchers = record_watchers.concat(item.scriptedItems.record_watchers);
			}
			if (item.type == 'filtered') {
				record_watchers.push({'table':item.table,'filter':item.filter});
			}
		}
	}
	// Init record watchers
	for (var y in record_watchers){
		var watcher = record_watchers[y];
		spUtil.recordWatch($scope, watcher.table, watcher.filter);
	}
  $rootScope.$broadcast('sp-header-loaded');
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.header-loader {
	float: left;
  	width: 24px;
  	position: relative;
  	top: 24px;
}

.cart-dropdown, .wishlist-menu, .gtd-dropdown-container .empty-dropdown {
  width: 350px;
  padding: 0;
  z-index: 1000;
  border-top-left-radius: 4px !important;
  border-top-right-radius: 4px !important;

  ul {
    max-height: 300px;
    overflow: auto;
  }

  .subtotal {
    display: block;
  }

  .item-image {
    padding: 0;
    margin: 0;
    text-align: center;
    max-width:100%;
    height:auto;
  }
  label, p {
    padding: 0;
    margin: 0;
  }
  .media {
    padding: 0;
    margin: 0;
  }
  .media-left &amp;gt; a {
    display: block;
    width: 48px;
    max-width: 48px;
  }
  .media-body {
    label {
      font-weight: bold;
    }
  }
  li.media {
    border-top: 1px solid #cccccc;
    padding: 1rem;
  }
  .panel {
    margin: 0;
  }
  .panel .panel-body {
    padding: 0;
  }
  .btn-clear {
		color: #333;
    background-color: #fff;
  }
  p.quantity-price {
    padding-top: 0.5rem;
    span {
      color: $text-muted;
      padding-right: 0.5rem;
      unicode-bidi: isolate;
    }
  }
  .align-right {
  	text-align: right;
  }
}



.item-added-tooltip, wishlist-item-added-tooltip {
  width: 184px;
  font-size: 14px;
}

.open &amp;gt; .dropdown-menu {
	padding: 0.5rem 0.2rem !important;
}

.gtd-dropdown-container {
  .empty-tour-content{
    text-align: center;
    margin:40px 20px;
  }
  .dropdown-menu li {
    a {
      cursor: pointer;
    }
    min-width: 20em;
  }
  .label-as-badge{
    width: 12px;
    height: 12px;
    display: inline-block;
    padding: 0px;
    padding-top: 2px;
  }
  .badge-container {
    display: inline-block;
    width: 12px;
  }
  .end-tour-menu {
    width: 300px;
    background-color: #fff;
    .end-tour-body {
       display:flex; 
       flex-flow: column; 
       margin: 5px; 
       row-gap: 8px;
    }
    .end-tour-name {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }
}

@media  (max-width: 845px) and (min-width: 768px)  {
	.header-menu-item ul {
		right: auto;
		left: auto;
	}
}
@media (max-width: 767px) {
	.empty-dropdown, .end-tour-menu {
		width: auto !important;
	}
}
&lt;/css&gt;&lt;data_table&gt;sp_instance_menu&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;title&lt;/field_list&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;govbr-demo-header-menu&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, elem) {
		function isMDScreenSize() {
		return window.matchMedia('(max-width: 992px)').matches;
	}
	
	var KEY = {
		TAB : 9,
		ENTER : 13,
		ESC : 27,
		SPACE_BAR : 32,
		LEFT : 37,
		UP : 38,
		RIGHT : 39,
		DOWN : 40
	}

	$('.navbar').on('keydown','[id="sp-nav-bar"]:visible',function(e) {
		var mdScreenSize = isMDScreenSize();
		var target = e.target;
		if (target.localName == 'a') {
			var currentMenuItem = $(target).parents('li').first();
			var parentUL = currentMenuItem.parents('ul').first();
			
			var menuItem = currentMenuItem;
			var targetInSubmenu = !currentMenuItem.is('.header-menu-item');
			if (targetInSubmenu) {
				menuItem = $(target).parents('li.header-menu-item').first();
			}
			
			if (mdScreenSize &amp;&amp; e.keyCode == KEY.RIGHT) {
				if ($(target).is('.dropdown-toggle') || $(target).is('[data-toggle="dropdown"]')) { // Target is a main menu item with sub-menu
					e.preventDefault();
					e.stopPropagation();
					currentMenuItem.addClass('open');
					$('&gt; a:visible', menuItem).attr("aria-expanded", "true");
					currentMenuItem.find('.dropdown-menu a:visible').first().focus();
				}
			} else if (mdScreenSize &amp;&amp; e.keyCode == KEY.LEFT) {
				if (parentUL.is('.dropdown-menu')) { // Target is a sub-menu item
					parentUL.parents('.header-menu-item').first().removeClass('open').find('&gt; a:visible').first().focus();
					setAriaExpnadedFalse(menuItem);
				}
			} else if ((mdScreenSize &amp;&amp; e.keyCode == KEY.UP) || (!mdScreenSize &amp;&amp; e.keyCode == KEY.LEFT)) {
				handleFocus(false, e, mdScreenSize, menuItem, currentMenuItem, parentUL, targetInSubmenu);
			} else if((mdScreenSize &amp;&amp; e.keyCode == KEY.DOWN) || (!mdScreenSize &amp;&amp; e.keyCode == KEY.RIGHT)) {
				handleFocus(true, e, mdScreenSize, menuItem, currentMenuItem, parentUL, targetInSubmenu);
			}
			if(e.keyCode == KEY.TAB) {
				if($(target).parents('li').hasClass('open'))
					$(target).dropdown('toggle');
				setAriaExpnadedFalse(menuItem);
			}
		}
	});
	
	function setAriaExpnadedFalse(menuItem) {
			if (menuItem.is('.dropdown'))
				$('&gt; a:visible', menuItem).attr("aria-expanded", "false");		
	}

	function handleFocus(next, event, mdScreenSize, menuItem, currentMenuItem, parentUL, targetInSubmenu) {
		event.preventDefault();
		
		if (targetInSubmenu) {
			var itemsInSubmenu = parentUL.find('li.visible');
			var firstSubmenuItem = itemsInSubmenu.first();
			var lastSubmenuItem = itemsInSubmenu.last();
		}
		var allMenuItems = $('li.header-menu-item:visible', '.navbar');
		var firstMenuItem = allMenuItems.first();
		var lastMenuItem = allMenuItems.last();

		if (!mdScreenSize) {
			currentMenuItem.removeClass('open');
			setAriaExpnadedFalse(menuItem);

			if (targetInSubmenu)
				menuItem.removeClass('open');
		} else {
			event.stopPropagation();
			if (!targetInSubmenu) {
				menuItem.removeClass('open');
				setAriaExpnadedFalse(menuItem);
			}
		}

		var indexMenuItem = allMenuItems.index(menuItem);
		var targetMenuItem = next ? allMenuItems.eq(indexMenuItem + 1) : allMenuItems.eq(indexMenuItem - 1);
		var menuItemToFocus = targetMenuItem.length ? targetMenuItem : next ? firstMenuItem: lastMenuItem; //enable circular navigation

		if (mdScreenSize &amp;&amp; targetInSubmenu) {
			targetMenuItem = next ? currentMenuItem.nextAll('li:visible').first() : currentMenuItem.prevAll('li:visible').first();
			menuItemToFocus = targetMenuItem.length ? targetMenuItem : next ? firstSubmenuItem: lastSubmenuItem; //enable circular navigation
		}
		menuItemToFocus.find('a').focus();
	}

	$(elem).on('click', '[data-toggle="dropdown"]', function(e) {
		var $target = $(e.target);
		setTimeout(function() {
			$('.dropdown-menu a:visible', $target.parents('.header-menu-item')).first().focus();
		}, 0);
	});

	setTimeout(function(){
		$('[data-toggle-second="tooltip"]').tooltip();
		bsDropdownTooltipShim('#cart-dropdown', '#cart-dropdown-wrapper');
		bsDropdownTooltipShim('#wishlist-menu', "#wishlist-menu-wrapper");
	});
	
	function bsDropdownTooltipShim(tooltipTrigger, dropdownParent) {
		if ($(dropdownParent).length) {
			$(tooltipTrigger).tooltip();
			$(dropdownParent).on('shown.bs.dropdown', function() {
				$(tooltipTrigger).tooltip('disable');
				$(tooltipTrigger).tooltip('hide');
			});
			$(dropdownParent).on('hidden.bs.dropdown', function() {
				$(tooltipTrigger).tooltip('enable');
			});
		}
	}
}]]&gt;&lt;/link&gt;&lt;name&gt;GOV.BR Demo Header Menu&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function(){
	// build menus
	var menu_id = $sp.getValue('sys_id'); // instance sys_id
	data.menu = {};
	data.menu.items = $sp.getMenuItems(menu_id);
	data.isLoggedIn = GlideSession.get().isLoggedIn();
	data.guidedTours = {};
	// Show tours only if gtd's sp sys property is set
	data.showTours = (gs.getProperty('com.snc.guided_tours.sp.enable') === 'true') &amp;&amp; data.isLoggedIn;
	if (!data.showTours) {
	data.guidedTours = null;
	}
	var catalogArr = ($sp.getCatalogs().value + "").split(",");

	catalogArr.forEach(function(catalog) {
		data.showWishlist = data.showWishlist || new sn_sc.Catalog(catalog).isWishlistEnabled();
	});
	if (data.isLoggedIn) {
		if (options.enable_wishlist &amp;&amp; data.showWishlist)
			data.wishlistWidget = $sp.getWidget("sc_wishlist_cart", {wishlistTemplate: "small_wishlist.html", auto_update_wishlist:options.auto_update_wishlist});
		if (options.enable_cart) {
			if (gs.getProperty("glide.sc.portal.use_cart_v2_header", "false") === "true")
				data.cartWidget = $sp.getWidget("sc-shopping-cart-v2", {cartTemplate: "small_shopping_cart_v2.html", auto_update_cart:options.auto_update_cart});
			else
				data.cartWidget = $sp.getWidget("sc-shopping-cart", {cartTemplate: "small_shopping_cart.html", auto_update_cart:options.auto_update_cart});
		}
	}
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;leandro.lopes&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-04-02 11:34:58&lt;/sys_created_on&gt;&lt;sys_id&gt;86ed23f597510210cbf53e2e6253af9b&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;GOV.BR Demo Header Menu&lt;/sys_name&gt;&lt;sys_package display_value="My Widgets" source="x_821667_my_widget"&gt;3d3b07fe971121109fd237971153affc&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="My Widgets"&gt;3d3b07fe971121109fd237971153affc&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_86ed23f597510210cbf53e2e6253af9b&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;leandro.lopes&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-04-02 11:36:12&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;ul class="nav navbar-nav" aria-label="${Header}"&gt;
  &lt;div class="header-loader" ng-class="{'invisible': !loadingIndicator}"&gt;
    &lt;div class="hidden-xs hidden-sm sp-loading-indicator la-sm"&gt;
      &lt;div&gt;&lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;li ng-repeat="item in visibleItems" ng-class="{dropdown: item.items.length &gt; 0, 'header-menu-item': true}" ng-include="'menuTemplate'"&gt;&lt;/li&gt;
&lt;!-- Wishlist menu --&gt;
  &lt;li ng-if="options.enable_wishlist &amp;&amp; data.isLoggedIn &amp;&amp; data.showWishlist &amp;&amp; !accessibilityEnabled" id="wishlist-menu-wrapper" class="dropdown hidden-xs header-menu-item"&gt;
  	&lt;a role="button" href="javascript:void(0)"
       data-toggle="dropdown"
       id="wishlist-menu"
       data-placement="bottom"
       data-original-title="${Your Wish List currently has} {{wishlistItemCount}} ${items}"
       aria-label="${Wish List}"&gt;
      &lt;span ng-bind-html="'${Wish List}'" aria-hidden="true"&gt;&lt;/span&gt;
      &lt;span ng-if="wishlistItemCount &gt; 0" aria-hidden="true" class="label label-as-badge label-primary sp-navbar-badge-count"&gt;{{wishlistItemCount}}&lt;/span&gt;
		&lt;/a&gt;
    &lt;div class="dropdown-menu wishlist-menu custom-drop-down"&gt;
      &lt;sp-widget widget="data.wishlistWidget"&gt;&lt;/sp-widget&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li ng-if="options.enable_wishlist &amp;&amp; data.isLoggedIn &amp;&amp; data.showWishlist" class="dropdown" ng-class="{'visible-xs': !accessibilityEnabled}"&gt;
  	&lt;a href="?id=sc_wishlist"
       title="${Your Wish List currently has} {{wishlistItemCount}} ${items}"
       data-toggle="tooltip"
       data-placement="bottom"
       class="toggle-dropdown"
       role="button"
       aria-label="${Your Wish List currently has} {{wishlistItemCount}} ${items}"&gt;
      &lt;span ng-bind-html="'${Wish List}'" aria-hidden="true"&gt;&lt;/span&gt;
      &lt;span ng-if="wishlistItemCount &gt; 0" aria-hidden="true" class="label label-as-badge label-primary sp-navbar-badge-count"&gt;{{wishlistItemCount}}&lt;/span&gt;
		&lt;/a&gt;
  &lt;/li&gt;
  &lt;!-- Shopping cart stuff --&gt;
 &lt;li ng-if="::options.enable_cart &amp;&amp; data.isLoggedIn &amp;&amp; !accessibilityEnabled" id="cart-dropdown-wrapper" class="dropdown hidden-xs header-menu-item"&gt;
  	&lt;a href
       data-toggle="dropdown"
       id="cart-dropdown"
       data-placement="bottom"
       data-original-title="${Your shopping cart currently has} {{cartItemCount}} ${items}"
       aria-label="${Shopping cart}"
       role="button"&gt;
    	&lt;i class="fa fa-shopping-cart" aria-hidden="true"&gt;&lt;/i&gt;
      &lt;span ng-bind-html="'${Cart}'" aria-hidden="true"&gt;&lt;/span&gt;
      &lt;span ng-if="cartItemCount &gt; 0" aria-hidden="true" class="label label-as-badge label-primary sp-navbar-badge-count"&gt;{{cartItemCount}}&lt;/span&gt;
		&lt;/a&gt;
    &lt;div class="dropdown-menu cart-dropdown custom-drop-down"&gt;
      &lt;sp-widget widget="data.cartWidget"&gt;&lt;/sp-widget&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li ng-if="::options.enable_cart &amp;&amp; data.isLoggedIn" class="header-menu-item" ng-class="::{'visible-xs': !accessibilityEnabled}"&gt;
  	&lt;a ng-href="?id=sc_cart"
       ng-click="collapse()"
       data-toggle="tooltip"
       data-placement="bottom"
       data-original-title="${Your shopping cart currently has} {{cartItemCount}} ${items}"
       class="toggle-dropdown"
       aria-label="${Your shopping cart currently has} {{cartItemCount}} ${items}"&gt;
    	&lt;i class="fa fa-shopping-cart" aria-hidden="true"&gt;&lt;/i&gt;
      &lt;span ng-bind-html="'${Cart}'" aria-hidden="true"&gt;&lt;/span&gt;
      &lt;span ng-if="cartItemCount &gt; 0" aria-hidden="true" class="label label-as-badge label-primary sp-navbar-badge-count"&gt;{{cartItemCount}}&lt;/span&gt;
	&lt;/a&gt;
  &lt;/li&gt;
  &lt;li ng-if="data.isLoggedIn &amp;&amp; data.guidedTours" class="dropdown header-menu-item gtd-dropdown-container"&gt;
    &lt;a href
       data-toggle="dropdown"
       id="tour-dropdown"
       data-placement="bottom"
       data-toggle-second="tooltip"
       ng-click="toggleTours()"
       ng-blur="onToursItemBlur()"
       data-original-title="{{tooltipTours}}"
       aria-label="{{data.guidedTours.label}}"
       role="button"&gt;
      &lt;span ng-bind-html="'${Tours}'" aria-hidden="true"&gt;&lt;/span&gt;
      &lt;span class='badge-container' ng-if="data.guidedTours.collection.length &gt; 0"&gt;
        &lt;span aria-hidden="true" class="label label-as-badge label-primary sp-navbar-badge-count"&gt;
          &amp;nbsp;
       &lt;/span&gt;
      &lt;/span&gt;
    &lt;/a&gt;
    &lt;div ng-if="data.guidedTours.collection.length &lt; 1 &amp;&amp; !currentTour" class="dropdown-menu empty-dropdown"&gt;
      &lt;div class="panel ng-scope"&gt;
       &lt;div class="panel-body"&gt;
        &lt;div class="empty-tour-content" role="alert"&gt;
         &lt;h4&gt;${You have no tours on this page}&lt;/h4&gt;
         &lt;p&gt;${Tours appear when your administrator creates them on specific pages}&lt;/p&gt;
        &lt;/div&gt;
       &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;ul ng-if="data.guidedTours.collection.length &gt; 0 &amp;&amp; !currentTour" class="dropdown-menu"
        role="menu" aria-label="${Tours}"&gt;
      &lt;li ng-repeat="mi in data.guidedTours.collection"
          class="ng-scope dropdown-menu-line"&gt;
        &lt;a role="button" href title="{{::mi.title}}" target="{{::mi.target}}" ng-click="mi.clicked()"&gt;
          {{::mi.title | characters:60}}
        &lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;div ng-if="currentTour" tabindex="0" class="dropdown-menu end-tour-menu" aria-label="${End Current Tour}: {{currentTour.name}}"&gt;
      &lt;div class="end-tour-body ng-scope"&gt;
          &lt;a type="button" class="btn btn-primary" tabindex="0" ng-click="endTour()" ng-keydown="endTourByKeyDown($event)"&gt;${End Tour}&lt;/a&gt;
          &lt;p class="end-tour-name" title="{{currentTour.name}}"&gt;${Current Tour}: {{currentTour.name}}&lt;/p&gt;
	    &lt;/div&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>790206844</payload_hash>
        <record_name>GOV.BR Demo Header Menu</record_name>
        <reverted_from/>
        <source>06f36c9b97113110cbf53e2e6253afcb</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>leandro.lopes</sys_created_by>
        <sys_created_on>2024-04-02 11:36:12</sys_created_on>
        <sys_id>4c3e2ff597510210cbf53e2e6253af9d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>18e9e9868ea0000001</sys_recorded_at>
        <sys_updated_by>leandro.lopes</sys_updated_by>
        <sys_updated_on>2024-04-02 11:36:12</sys_updated_on>
        <type>Widget</type>
        <update_guid>403e2ff5675102108e1a4a05361db79d</update_guid>
        <update_guid_history>403e2ff5675102108e1a4a05361db79d:790206844,f41e27f526510210334d8e73109c072b:141664701,46ed23f5ae5102102692b39506a2479d:128651082</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="GOV.BR Demo Header Menu">4f6ee3f597510210cbf53e2e6253afd6</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>leandro.lopes</sys_created_by>
        <sys_created_on>2024-04-02 11:37:13</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>cf2f65f477014e4c9cb189f54f2e7110</sys_id>
        <sys_metadata>86ed23f597510210cbf53e2e6253af9b</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>GOV.BR Demo Header Menu</sys_name>
        <sys_package display_value="My Widgets" source="x_821667_my_widget">3d3b07fe971121109fd237971153affc</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="My Widgets">3d3b07fe971121109fd237971153affc</sys_scope>
        <sys_scope_delete display_value="">1735843da8c24506b7924cef26a0ffe1</sys_scope_delete>
        <sys_update_name>sp_widget_86ed23f597510210cbf53e2e6253af9b</sys_update_name>
        <sys_update_version display_value="sp_widget_86ed23f597510210cbf53e2e6253af9b">4c3e2ff597510210cbf53e2e6253af9d</sys_update_version>
        <sys_updated_by>leandro.lopes</sys_updated_by>
        <sys_updated_on>2024-04-02 11:37:13</sys_updated_on>
    </sys_metadata_delete>
</record_update>
